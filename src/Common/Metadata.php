<?php

namespace SandFox\PhpStorm\Metadata\Common;

use SandFox\PhpStorm\Metadata\Containers\ContainerIterator;

/**
 * Class Metadata
 * @package SandFox\PhpStorm\Metadata\Common
 * @see https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+Advanced+Metadata
 */
class Metadata
{
    /**
     * @var ContainerIterator[]
     */
    private $iterators;

    public function __construct(ContainerIterator ...$containerIterators)
    {
        $this->iterators = $containerIterators;
    }

    public function render(array $containerMethods): string
    {
        // Always add ['Typename'] => Typename::class mapping
        $map = ['' => "'@'"];

        $map = array_merge($map, ...array_map(function ($iterator) {
            return $this->createMap($iterator);
        }, $this->iterators));

        $mapStrings = [];

        foreach ($map as $key => $value) {
            $key = str_replace('\\', '\\\\', $key);
            $key = str_replace('\'', '\\\'', $key);
            $mapStrings []= "'{$key}' => {$value},";
        }

        $mapString = implode("\n        ", $mapStrings);

        $generatorClass = get_class();

        $metadata = <<<PHP
<?php

// This file is automatically generated by {$generatorClass}

namespace PHPSTORM_META {
PHP;

        foreach ($containerMethods as $method) {
            $metadata .= "\n    override({$method}, map([\n        {$mapString}\n    ]));";
        }

        $metadata .= "\n}\n";

        return $metadata;
    }

    private function createMap(ContainerIterator $exportIterator): array
    {
        $map = [];

        foreach ($exportIterator as $key => $value) {
            $map[$key] = $value;
        }

        return $map;
    }
}
